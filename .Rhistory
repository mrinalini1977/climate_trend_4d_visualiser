agg_output_data[i] = agg_bucket_data[[i]]$output
}
agg_bucket_data[[1]]$output
agg_output_data <- agg_bucket_data[[1]]$output
output_bucket_data <- agg_output_data$buckets
Search(index = "sample_index")
agg_data <- build_data$aggregations
Search(index = "sample_index")
build_data <- fromJSON(paste(readLines("C:/work/Prasanna/data/queryResult.txt"), collapse=""))
Search(index = "sample_index")
plosdat <- system.file("examples", "plos_data.json", package = "elastic")
docs_bulk(build_data)
docs_bulk(plosdat)
plosdat <- system.file("examples", "plos_data.json", package = "elastic")
docs_bulk(plosdat)
connect()
plosdat <- system.file("examples", "plos_data.json", package = "elastic")
docs_bulk(plosdat)
connect()
build_data <- fromJSON(paste(readLines("C:/work/Prasanna/data/queryResult.txt"), collapse=""))
docs_bulk(build_data)
plosbulkData <- docs_bulk(plosdat)
View(plosbulkData)
View(plosbulkData)
Search(index="plos", size=1)$hits$hits
class(plodBulkData)
class(plosBulkData)
class(plosbulkData)
View(plosbulkData)
View(build_data)
View(build_data)
View(plosbulkData)
View(build_data)
View(plosbulkData)
View(agg_bucket_data)
datafile1 <- paste(readLines("C:/work/Prasanna/data/queryResult.txt"), collapse="")
dataFile <- "C:/work/Prasanna/data/queryResult.txt";
datafile
datafile
dataFile
datafile1
docs_bulk(datafile1)
docs_bulk(datafile1)
build_data <- fromJSON(paste(readLines("C:/work/Prasanna/data/queryResult.txt"), collapse=""))
docs_bulk(dataFile)
class(datafile1)
connect()
dataFile <- "C:/work/Prasanna/data/buildResult.json";
datafile1 <- paste(readLines("C:/work/Prasanna/data/queryResult.txt"), collapse="")
dataFile <- "C:/work/Prasanna/data/queryResult.txt";
docs_bulk(dataFile)
View(build_data)
View(build_data)
build_data <- fromJSON(paste(readLines("C:/work/Prasanna/data/queryResult.txt"), collapse=""))
Search(index = "sample_index")
class(datafile1)
dataFile <- paste(readLines("C:/work/Prasanna/data/queryResult.txt"), collapse="")
docs_bulk(dataFile)
connect()
dataFile <- "C:/work/Prasanna/data/buildResult.json";
invisible(docs_bulk(dataFile))
connect()
dataFile <- paste(readLines("C:/work/Prasanna/data/queryResult.txt"), collapse="")
dataFile <- "C:/work/Prasanna/data/buildResult.json";
invisible(docs_bulk(dataFile))
docs_bulk(dataFile)
library(elastic)
library(jsonlite)
library(rjson)
library(RCurl)
library(RJSONIO)
buildOut <- RJSONIO::fromJSON("C:/work/Prasanna/data/buildResults.json", flatten = TRUE )
names(buildOut)
#1
agg_data <- buildOut$aggregations$data
names(agg_data)
agg_buckets_data <- agg_data$buckets
View(agg_buckets_data)
names(agg_buckets_data)
names(agg_buckets_data)
str(agg_buckets_data)
class(agg_buckets_data)
class(buildOut$took)
names(agg_data)
class(buildOut$aggregations)
#2
lapply(agg_data$buckets, "[[", 1)
#2
output_data<- lapply(agg_data$buckets, "[[", 4)
names(output_data)
#3
out_buckets_data <- lapply(output_data$buckets, "[[", 3)
View(out_buckets_data)
#3
out_buckets_data <- lapply(output_data, "[[", 3)
#4
buckets_data_2 <- lapply(out_buckets_data, "[[", 1)
#5
runs_data <- lapply(buckets_data, "[[", 3)
#5
runs_data <- lapply(buckets_data_2, "[[", 3)
#6
runs_bucket_data <- lapply(runs_data, "[[", 3)
#7
latest_data <- lapply(runs_bucket_data, "[[", 1)
#7
latest_data <- lapply(runs_bucket_data, "[[", 1)
#7
runs_bucket_data_array <- lapply(runs_bucket_data, "[[", 1)
#8
latest_data <- lapply(runs_bucket_data_array, "[[", 3)
#9
hits_data <- lapply(latest_data,"[[", 1)
#10
hits_data$hits$hits
#10
hits_hits_data <- lapply(hits_data,"[[", 3)
View(hits_hits_data)
hits_hits_hits_data <- lapply(hits_hits_data,"[[", 1)
(hits_hits_data,"[[", 5)
View(hits_data)
#11
souce_data <- lapply(hits_hits_hits_data,"[[", 5)
devtools::install_github("sailthru/tidyjson")
library(tidyjson)
library(dplyr)
library(tidyr)
json <- paste(readLines("C:/work/Prasanna/data/ex.json"), collapse = " ")
json <- RJSONIO::fromJSON(paste(readLines("C:/work/Prasanna/data/ex.json"), collapse = " ")
ex_data <- fromJSON(paste(readLines("C:/work/Prasanna/data/ex.json"),collapse=""))
library(rjson)
ex_data <- fromJSON(paste(readLines("C:/work/Prasanna/data/ex.json"),collapse=""))
ex_data <- RJSONIO::fromJSON(paste(readLines("C:/work/Prasanna/data/ex.json"),collapse=""))
ex_data
class(ex_data)
prep <- ex_data
prep <- ex_data %>%
enter_object("result")
ex_data <- paste(readLines("C:/work/Prasanna/data/ex.json"), collapse = " ")
class(ex_data)
ex_data
prep <- ex_data %>%
enter_object("result")
View(prep)
View(prep)
class(prep)
prep <- ex_data %>%
enter_object("result")
enter_object("items") %>%
View(prep)
prep <- ex_data %>%
enter_object("result")
enter_object("items") %>%
gather_array()
View(prep)
View(prep)
ex_data <- paste(readLines("C:/work/Prasanna/data/ex.json"), collapse = " ")$dokumentstatus
buildout_str <- paste(readLines("C:/work/Prasanna/data/buildResults.json"), collapse = " ")
class(buildout_str)
prep <- buildout_str %>%
enter_object("aggregations")
View(prep)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data")
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets")
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array()
class(prep)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
json_types()
View(prep)
prep
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
enter_object("output")
View(prep)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
json_types()
View(prep)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output")
View(prep)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output")
enter_object("buckets") %>%
gather_array() %>%
enter_object("runs")
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output")
enter_object("buckets") %>%
gather_array()
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("runs")
View(prep)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("runs")  %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("latest")
View(prep)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("runs")  %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("latest")  %>%
enter_object("hits")  %>%
enter_object("hits")
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("runs")  %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("latest")  %>%
enter_object("hits")  %>%
enter_object("hits")  %>%
gather_array() %>%
enter_object("_source")
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("runs")  %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("latest")  %>%
enter_object("hits")  %>%
enter_object("hits")  %>%
gather_array() %>%
enter_object("_source") %>%
json_types()
View(prep)
sourceobj <- prep %>%
filter(as.character(type) == "object") %>%
spread_values(
buildName = jstring("BuildName")
) %>%
mutate(Build_Name = buildName) %>%
select(-buildName) %>%
tbl_df()
sourceobj <- prep %>%
filter(as.character(type) == "object") %>%
spread_values(
buildName = jstring("BuildName")
)
sourceobj <- prep %>%
filter(as.character(type) == "object") %>%
spread_values(
buildName = jstring("BuildName")
)
sourceobj <- prep %>%
filter(as.character(type) == "object")
View(prep)
library(dplyr)
library(tidyr)
library(tidyjson)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("runs")  %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("latest")  %>%
enter_object("hits")  %>%
enter_object("hits")  %>%
gather_array() %>%
enter_object("_source") %>%
json_types()
sourceobj <- prep %>%
filter(as.character(type) == "object")
View(sourceobj)
sourceobj <- prep %>%
filter(as.character(type) == "object") %>%
spread_values(
buildName = jstring("BuildName")
)
View(output_data)
sourceobj <- prep %>%
filter(as.character(type) == "object") %>%
spread_values(
buildName = jstring("Commits")
)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("runs")  %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("latest")  %>%
enter_object("hits")  %>%
enter_object("hits")  %>%
gather_array() %>%
json_types()
View(prep)
sourceobj <- prep %>%
filter(as.character(type) == "object") %>%
spread_values(
commits = jstring("_source", Commits)
)
sourceobj <- prep %>%
filter(as.character(type) == "object") %>%
spread_values(
commits = jstring(_source, Commits)
)
sourceobj <- prep %>%
enter_object("_source")
View(prep)
View(sourceobj)
sourceobj <- prep %>%
enter_object("_source")
spread_values(
buildName = jstring("BuildName")
)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("runs")  %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("latest")  %>%
enter_object("hits")  %>%
enter_object("hits")  %>%
gather_array() %>%
enter_object("_source")
spread_values(
buildName = jstring("BuildName")
)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("output") %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("runs")  %>%
enter_object("buckets") %>%
gather_array() %>%
enter_object("latest")  %>%
enter_object("hits")  %>%
enter_object("hits")  %>%
gather_array() %>%
enter_object("_source")
spread_values(
buildName = jstring("Commits")
)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
spread_values( keys = "key")
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
spread_values( keys = jstring("key") )
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
spread_values(  )
View(prep)
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data") %>%
enter_object("buckets") %>%
gather_array() %>%
prep <- buildout_str %>%
enter_object("aggregations") %>%
enter_object("data")
buildout_str <- paste(readLines("C:/work/Prasanna/data/buildResults.json"), collapse = " ")
library(RJSONIO)
library(elastic)
library(RCurl)
library(httr)
library(elasticsearchr)
setwd("C:")
index_create("idx_religion")
file <- "C:/work/4d-time-series-visualiser/UNdata_religion.csv"
data_world<- read.csv(file)
data_world<- read.csv(file)
index_create("idx_religion")
index_delete("idx_religion")
docs_bulk(data_world, index = "idx_religion", type = "rlgs", raw = true)
connect()
index_create("idx_religion")
library(dplyr)
library(tidyr)
library(tidyverse)
library(jsonlite)
setwd("C:\\work\\4d-time-series-visualiser\\climate")
rain_data <- read.csv("rainfall_data_1901_2016.csv")
min_temp_data <- read.csv("min_temperature_1901_2016.csv")
max_temp_data <- read.csv("max_temperature_1901_2016.csv")
rain_max_month_idx <- max.col(rain_data[2:13], "first")
MAX_RAIN_MONTH <- colnames(rain_data)[rain_max_month_idx]
rain_data <- cbind(rain_data,MAX_RAIN_MONTH)
monsoon_rain <- rain_data$JJAS
LPA_monsoon <- 8900
lower_limit_monsoon <- .96 * LPA_monsoon
upper_limit_monsoon <- 1.04 * LPA_monsoon
rain_data$MONSOON_RAIN_LEVEL <- "Normal"
rain_data$MONSOON_RAIN_LEVEL[rain_data$JJAS > upper_limit_monsoon] <- "Above Normal"
#rain_data$MONSOON_RAIN_LEVEL[rain_data$JJAS>= lower_limit_monsoon & rain_data$JJAS <= upper_limit_monsoon] <- "Normal"
rain_data$MONSOON_RAIN_LEVEL[rain_data$JJAS <lower_limit_monsoon] <- "Below Normal"
min_temp_data$AVG_MIN_TEMP <- round(rowMeans(min_temp_data[,2:13], na.rm =  TRUE),2)
max_temp_data$AVG_MAX_TEMP <- round(rowMeans(max_temp_data[,2:13], na.rm =  TRUE),2)
temp_data_merge <- merge(min_temp_data, max_temp_data, by = "YEAR")
temp_data_merge %>% select(YEAR, AVG_MIN_TEMP, AVG_MAX_TEMP)
climate_df <- merge(rain_data, temp_data_merge, by="YEAR")
climate_df <- select(climate_df, YEAR, ANN, MONSOON_RAIN_LEVEL, AVG_MAX_TEMP, AVG_MIN_TEMP)
colnames(climate_df)[colnames(climate_df) == 'ANN'] <- 'ANNUAL_RAINFALL'
climate_json <- jsonlite::toJSON(climate_df)
jsonlite::write_json("C:/work/4d-time-series-visualiser/climate/climate_data.json", climate_json, pretty = TRUE)
library(rjson)
rjson::write_json("C:/work/4d-time-series-visualiser/climate/climate_data.json", climate_json, pretty = TRUE)
?write_json
tmp <- tempfile()
tmp
iris
write_json(iris, tmp)
write_json(climate_json, "C:/work/4d-time-series-visualiser/climate/climate_data.json",pretty = TRUE)
cat(climate_json)
flatten('{"top":{"next":{"final":1,"end":true},"another":"yes"},"more":"no"}')
install.packages("ndjson")
library(ndjson)
flatten('{"top":{"next":{"final":1,"end":true},"another":"yes"},"more":"no"}')
library(readr)
write_lines(climate_json, "C:/work/4d-time-series-visualiser/climate/climate_data.json")
flatten('{"top":{"next":{"final":1,"end":true},"another":"yes"},"more":"no"}')
